// Code generated by go-queryset. DO NOT EDIT.
package model

import (
	"errors"
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set ExportDBQuerySet

// ExportDBQuerySet is an queryset type for ExportDB
type ExportDBQuerySet struct {
	db *gorm.DB
}

// NewExportDBQuerySet constructs new ExportDBQuerySet
func NewExportDBQuerySet(db *gorm.DB) ExportDBQuerySet {
	return ExportDBQuerySet{
		db: db.Model(&ExportDB{}),
	}
}

func (qs ExportDBQuerySet) w(db *gorm.DB) ExportDBQuerySet {
	return NewExportDBQuerySet(db)
}

// All is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) All(ret *[]ExportDB) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *ExportDB) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) CreatedAtEq(createdAt time.Time) ExportDBQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) CreatedAtGt(createdAt time.Time) ExportDBQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) CreatedAtGte(createdAt time.Time) ExportDBQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) CreatedAtLt(createdAt time.Time) ExportDBQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) CreatedAtLte(createdAt time.Time) ExportDBQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) CreatedAtNe(createdAt time.Time) ExportDBQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// DBNameEq is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) DBNameEq(dBName string) ExportDBQuerySet {
	return qs.w(qs.db.Where("db_name = ?", dBName))
}

// DBNameIn is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) DBNameIn(dBName ...string) ExportDBQuerySet {
	if len(dBName) == 0 {
		qs.db.AddError(errors.New("must at least pass one dBName in DBNameIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("db_name IN (?)", dBName))
}

// DBNameNe is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) DBNameNe(dBName string) ExportDBQuerySet {
	return qs.w(qs.db.Where("db_name != ?", dBName))
}

// DBNameNotIn is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) DBNameNotIn(dBName ...string) ExportDBQuerySet {
	if len(dBName) == 0 {
		qs.db.AddError(errors.New("must at least pass one dBName in DBNameNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("db_name NOT IN (?)", dBName))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) Delete() error {
	return qs.db.Delete(ExportDB{}).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *ExportDB) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(ExportDB{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(ExportDB{})
	return db.RowsAffected, db.Error
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) GetUpdater() ExportDBUpdater {
	return NewExportDBUpdater(qs.db)
}

// HostEq is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) HostEq(host string) ExportDBQuerySet {
	return qs.w(qs.db.Where("host = ?", host))
}

// HostIn is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) HostIn(host ...string) ExportDBQuerySet {
	if len(host) == 0 {
		qs.db.AddError(errors.New("must at least pass one host in HostIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("host IN (?)", host))
}

// HostNe is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) HostNe(host string) ExportDBQuerySet {
	return qs.w(qs.db.Where("host != ?", host))
}

// HostNotIn is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) HostNotIn(host ...string) ExportDBQuerySet {
	if len(host) == 0 {
		qs.db.AddError(errors.New("must at least pass one host in HostNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("host NOT IN (?)", host))
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) IDEq(ID uint64) ExportDBQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) IDGt(ID uint64) ExportDBQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) IDGte(ID uint64) ExportDBQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) IDIn(ID ...uint64) ExportDBQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) IDLt(ID uint64) ExportDBQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) IDLte(ID uint64) ExportDBQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) IDNe(ID uint64) ExportDBQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) IDNotIn(ID ...uint64) ExportDBQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) Limit(limit int) ExportDBQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) Offset(offset int) ExportDBQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs ExportDBQuerySet) One(ret *ExportDB) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) OrderAscByCreatedAt() ExportDBQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) OrderAscByID() ExportDBQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByPort is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) OrderAscByPort() ExportDBQuerySet {
	return qs.w(qs.db.Order("port ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) OrderAscByUpdatedAt() ExportDBQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) OrderDescByCreatedAt() ExportDBQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) OrderDescByID() ExportDBQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByPort is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) OrderDescByPort() ExportDBQuerySet {
	return qs.w(qs.db.Order("port DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) OrderDescByUpdatedAt() ExportDBQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// PasswordEq is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) PasswordEq(password string) ExportDBQuerySet {
	return qs.w(qs.db.Where("password = ?", password))
}

// PasswordIn is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) PasswordIn(password ...string) ExportDBQuerySet {
	if len(password) == 0 {
		qs.db.AddError(errors.New("must at least pass one password in PasswordIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("password IN (?)", password))
}

// PasswordNe is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) PasswordNe(password string) ExportDBQuerySet {
	return qs.w(qs.db.Where("password != ?", password))
}

// PasswordNotIn is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) PasswordNotIn(password ...string) ExportDBQuerySet {
	if len(password) == 0 {
		qs.db.AddError(errors.New("must at least pass one password in PasswordNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("password NOT IN (?)", password))
}

// PortEq is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) PortEq(port int) ExportDBQuerySet {
	return qs.w(qs.db.Where("port = ?", port))
}

// PortGt is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) PortGt(port int) ExportDBQuerySet {
	return qs.w(qs.db.Where("port > ?", port))
}

// PortGte is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) PortGte(port int) ExportDBQuerySet {
	return qs.w(qs.db.Where("port >= ?", port))
}

// PortIn is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) PortIn(port ...int) ExportDBQuerySet {
	if len(port) == 0 {
		qs.db.AddError(errors.New("must at least pass one port in PortIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("port IN (?)", port))
}

// PortLt is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) PortLt(port int) ExportDBQuerySet {
	return qs.w(qs.db.Where("port < ?", port))
}

// PortLte is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) PortLte(port int) ExportDBQuerySet {
	return qs.w(qs.db.Where("port <= ?", port))
}

// PortNe is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) PortNe(port int) ExportDBQuerySet {
	return qs.w(qs.db.Where("port != ?", port))
}

// PortNotIn is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) PortNotIn(port ...int) ExportDBQuerySet {
	if len(port) == 0 {
		qs.db.AddError(errors.New("must at least pass one port in PortNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("port NOT IN (?)", port))
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u ExportDBUpdater) SetCreatedAt(createdAt time.Time) ExportDBUpdater {
	u.fields[string(ExportDBDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDBName is an autogenerated method
// nolint: dupl
func (u ExportDBUpdater) SetDBName(dBName string) ExportDBUpdater {
	u.fields[string(ExportDBDBSchema.DBName)] = dBName
	return u
}

// SetHost is an autogenerated method
// nolint: dupl
func (u ExportDBUpdater) SetHost(host string) ExportDBUpdater {
	u.fields[string(ExportDBDBSchema.Host)] = host
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u ExportDBUpdater) SetID(ID uint64) ExportDBUpdater {
	u.fields[string(ExportDBDBSchema.ID)] = ID
	return u
}

// SetPassword is an autogenerated method
// nolint: dupl
func (u ExportDBUpdater) SetPassword(password string) ExportDBUpdater {
	u.fields[string(ExportDBDBSchema.Password)] = password
	return u
}

// SetPort is an autogenerated method
// nolint: dupl
func (u ExportDBUpdater) SetPort(port int) ExportDBUpdater {
	u.fields[string(ExportDBDBSchema.Port)] = port
	return u
}

// SetShowName is an autogenerated method
// nolint: dupl
func (u ExportDBUpdater) SetShowName(showName string) ExportDBUpdater {
	u.fields[string(ExportDBDBSchema.ShowName)] = showName
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u ExportDBUpdater) SetUpdatedAt(updatedAt time.Time) ExportDBUpdater {
	u.fields[string(ExportDBDBSchema.UpdatedAt)] = updatedAt
	return u
}

// SetUser is an autogenerated method
// nolint: dupl
func (u ExportDBUpdater) SetUser(user string) ExportDBUpdater {
	u.fields[string(ExportDBDBSchema.User)] = user
	return u
}

// ShowNameEq is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) ShowNameEq(showName string) ExportDBQuerySet {
	return qs.w(qs.db.Where("show_name = ?", showName))
}

// ShowNameIn is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) ShowNameIn(showName ...string) ExportDBQuerySet {
	if len(showName) == 0 {
		qs.db.AddError(errors.New("must at least pass one showName in ShowNameIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("show_name IN (?)", showName))
}

// ShowNameNe is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) ShowNameNe(showName string) ExportDBQuerySet {
	return qs.w(qs.db.Where("show_name != ?", showName))
}

// ShowNameNotIn is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) ShowNameNotIn(showName ...string) ExportDBQuerySet {
	if len(showName) == 0 {
		qs.db.AddError(errors.New("must at least pass one showName in ShowNameNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("show_name NOT IN (?)", showName))
}

// Update is an autogenerated method
// nolint: dupl
func (u ExportDBUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u ExportDBUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) UpdatedAtEq(updatedAt time.Time) ExportDBQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) UpdatedAtGt(updatedAt time.Time) ExportDBQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) UpdatedAtGte(updatedAt time.Time) ExportDBQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) UpdatedAtLt(updatedAt time.Time) ExportDBQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) UpdatedAtLte(updatedAt time.Time) ExportDBQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) UpdatedAtNe(updatedAt time.Time) ExportDBQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// UserEq is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) UserEq(user string) ExportDBQuerySet {
	return qs.w(qs.db.Where("user = ?", user))
}

// UserIn is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) UserIn(user ...string) ExportDBQuerySet {
	if len(user) == 0 {
		qs.db.AddError(errors.New("must at least pass one user in UserIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("user IN (?)", user))
}

// UserNe is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) UserNe(user string) ExportDBQuerySet {
	return qs.w(qs.db.Where("user != ?", user))
}

// UserNotIn is an autogenerated method
// nolint: dupl
func (qs ExportDBQuerySet) UserNotIn(user ...string) ExportDBQuerySet {
	if len(user) == 0 {
		qs.db.AddError(errors.New("must at least pass one user in UserNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("user NOT IN (?)", user))
}

// ===== END of query set ExportDBQuerySet

// ===== BEGIN of ExportDB modifiers

// ExportDBDBSchemaField describes database schema field. It requires for method 'Update'
type ExportDBDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f ExportDBDBSchemaField) String() string {
	return string(f)
}

// ExportDBDBSchema stores db field names of ExportDB
var ExportDBDBSchema = struct {
	ID        ExportDBDBSchemaField
	ShowName  ExportDBDBSchemaField
	Host      ExportDBDBSchemaField
	Port      ExportDBDBSchemaField
	User      ExportDBDBSchemaField
	Password  ExportDBDBSchemaField
	DBName    ExportDBDBSchemaField
	CreatedAt ExportDBDBSchemaField
	UpdatedAt ExportDBDBSchemaField
}{

	ID:        ExportDBDBSchemaField("id"),
	ShowName:  ExportDBDBSchemaField("show_name"),
	Host:      ExportDBDBSchemaField("host"),
	Port:      ExportDBDBSchemaField("port"),
	User:      ExportDBDBSchemaField("user"),
	Password:  ExportDBDBSchemaField("password"),
	DBName:    ExportDBDBSchemaField("db_name"),
	CreatedAt: ExportDBDBSchemaField("created_at"),
	UpdatedAt: ExportDBDBSchemaField("updated_at"),
}

// Update updates ExportDB fields by primary key
// nolint: dupl
func (o *ExportDB) Update(db *gorm.DB, fields ...ExportDBDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":         o.ID,
		"show_name":  o.ShowName,
		"host":       o.Host,
		"port":       o.Port,
		"user":       o.User,
		"password":   o.Password,
		"db_name":    o.DBName,
		"created_at": o.CreatedAt,
		"updated_at": o.UpdatedAt,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update ExportDB %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// ExportDBUpdater is an ExportDB updates manager
type ExportDBUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewExportDBUpdater creates new ExportDB updater
// nolint: dupl
func NewExportDBUpdater(db *gorm.DB) ExportDBUpdater {
	return ExportDBUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&ExportDB{}),
	}
}

// ===== END of ExportDB modifiers

// ===== END of all query sets
